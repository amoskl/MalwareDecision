import os
from experiment import load_tree

from Experiments.experiment_framework import Experiment

# This experiment is simple: using the same training set and test sets, create the same decision tree but using a different
# value for the ngram size.


def ngram_size_experiment(trigram_tree, quadgram_tree, pentagram_tree, hexagram_tree, test_set_benign, test_set_malicious):
    experiment = Experiment('altering the length of the n-gram')
    #experiment.add_individual_experiment(trigram_tree, test_set_benign, test_set_malicious, '3-gram tree')
    experiment.add_individual_experiment(quadgram_tree, test_set_benign, test_set_malicious, '4-gram tree')
    #experiment.add_individual_experiment(pentagram_tree, test_set_benign, test_set_malicious, '5-gram tree')
    #experiment.add_individual_experiment(hexagram_tree, test_set_benign, test_set_malicious, '6-gram tree')

    return experiment.show_description()


def do():
    test_set_benign = "/Users/amoskleinberger/Dropbox/dlls/test_set/benign"
    test_set_malicious = "/Users/amoskleinberger/Dropbox/dlls/test_set/malware"

    tree = load_tree("../tree")

    benign = []
    malware = []

    for file in os.listdir(test_set_benign):
        benign.append(os.path.join(test_set_benign, file))

    for file in os.listdir(test_set_malicious):
        malware.append(os.path.join(test_set_malicious, file))

    print ngram_size_experiment(None, tree, None, None, benign, malware)


do()