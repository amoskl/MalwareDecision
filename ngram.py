import os


class NgramBuilder(object):

    def __init__(self, n, malware_folder_path, benign_folder_path):
        self._n = n
        self._malware_folder_path = malware_folder_path
        self._benign_folder_path = benign_folder_path
        self._ngrams = dict()

    @property
    def ngrams(self):
        """
        @return: List of unique ngrams
        """
        return self._ngrams.keys()

    @staticmethod
    def _get_file_paths_in_folder(folder_path):
        for file_name in os.listdir(folder_path):

            file_path = os.path.join(folder_path, file_name)
            if os.path.isfile(file_path):
                yield file_path

    def _add_ngrams_from_file(self, file_path):
        with open(file_path, 'rb') as current_file:
            while True:
                ngram = current_file.read(self._n)
                read_bytes = len(ngram)

                if read_bytes is self._n:
                    self._ngrams[ngram] = True

                if ngram == "":
                    break

    def build_ngrams(self):

        for file_path in self._get_file_paths_in_folder(self._malware_folder_path):
            self._add_ngrams_from_file(file_path)

        for file_path in self._get_file_paths_in_folder(self._benign_folder_path):
            self._add_ngrams_from_file(file_path)
