import os
import time


class NgramBuilder(object):

    _FILE_CLASS_BENIGN = 0
    _FILE_CLASS_MALWARE = 1
    _CLASS_NAMES = ["Benign", "Malware"]

    def __init__(self, n, malware_folder_path, benign_folder_path):
        self._n = n
        self._malware_folder_path = malware_folder_path
        self._benign_folder_path = benign_folder_path
        self._ngrams = dict()

    @property
    def ngrams(self):
        """
        @return: List of unique ngrams
        """
        return self._ngrams.keys()

    @staticmethod
    def _get_file_paths_in_folder(folder_path):
        for file_name in os.listdir(folder_path):

            file_path = os.path.join(folder_path, file_name)
            if os.path.isfile(file_path):
                yield file_path

    def _get_ngram_from_buffer(self, ngram_buffer):
            for i in xrange(len(ngram_buffer) - self._n + 1):
                ngram = ngram_buffer[i: i + self._n]
                yield ngram

    def _add_ngrams_from_file(self, file_path, file_class):
        print "Reading ngrams from file:{file} with class:{file_class}".format(file=os.path.basename(file_path),
                                                                               file_class=self._CLASS_NAMES[file_class])

        with open(file_path, 'rb') as current_file:
            ngram_buffer = current_file.read()

            current_file_ngrams = {}  # holds ngrams of the current file

            cur_time = time.time()

            for ngram in self._get_ngram_from_buffer(ngram_buffer):
                if ngram not in current_file_ngrams:
                    # this is the first time this ngram is found in this file
                    current_file_ngrams[ngram] = True

                    if ngram not in self._ngrams:
                        # This is the first time this ngram is found in all files
                        self._ngrams[ngram] = [0, 0]

                    self._ngrams[ngram][file_class] += 1

            print "Read {ngrams} new ngrams from {file} in {seconds} seconds.".format(ngrams=len(current_file_ngrams),
                                                                                      file=os.path.basename(file_path),
                                                                                      seconds=(time.time()-cur_time))

    def build_ngrams(self):

        for file_path in self._get_file_paths_in_folder(self._malware_folder_path):
            self._add_ngrams_from_file(file_path, self._FILE_CLASS_MALWARE)

        for file_path in self._get_file_paths_in_folder(self._benign_folder_path):
            self._add_ngrams_from_file(file_path, self._FILE_CLASS_BENIGN)
